install.packages("dplyr")
tinytex::install_tinytex()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(faraway)
install.packages("faraway")
data(gala, package = "faraway")
gala = gala[,-2]
head(gala)
gala_pois = glm(Species ~ ., family = poisson, data = gala)
sumary(gala_pois)$coef
??sumary
library(faraway)
gala_pois = glm(Species ~ ., family = poisson, data = gala)
sumary(gala_pois)$coef
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(faraway)
y = gala$Species
y
y = gala$Species
eta = log(mu)
y = gala$Species
mu = y
eta = log(mu)
z = eta + (y-mu)/mu
w = mu * (1- mu)
lmod = lm(z ~ ., weights = w, gala)
mu
y = gala$Species
mu = y
eta = log(mu)
z = eta + (y-mu)/mu
w = 1/mu * ((1/mu)/(mu)) ^(-2)
lmod = lm(z ~ ., weights = w, gala)
lmod
lmod = lm(z ~ Area + Elevation + Nearest + Scruz + Adjacent, weights = w, gala)
lmod
data(denim)
denim <- denim[-which(denim$waste == max(denim$waste)),] #removing 2 outliers
denim <- denim[-which(denim$waste == max(denim$waste)),]
install.packages("ggplot2")
library(ggplot2)
head(denim)
ggplot(aes(x = supplier, y = waste), data = denim) +
geom_bar()
ggplot(aes(x = supplier, y = waste), data = denim) +
geom_point()
lmod = lm(waste ~ supplier, denim)
drop1(lmod, test = "F")
install.packages("lme4")
library(lme4)
lmod = lm(waste ~ supplier, denim)
drop1(lmod, test = "F")
rmod = lmer(waste ~ 1+(1|supplier), denim, REML = TRUE)
summary(rmod)
sigma2_alpha = 2.39^2 # var of random intercept
sigma2 = 6.11^2 # var of fixed intercept
rho = sigma2_alpha/(sigma2_alpha + sigma2)
sigma2_alpha = 2.391^2 # var of random intercept
sigma2 = 6.107^2 # var of fixed intercept
rho = sigma2_alpha/(sigma2_alpha + sigma2)
sigma2_alpha = 2.391^2 # var of random intercept
sigma2 = 6.107^2 # var of fixed intercept
rho = sigma2_alpha/(sigma2_alpha + sigma2)
nlmod = lm(waste ~ 1, denim)
mmodstar = lmer(waste ~ 1 + (1|supplier), denim, REML = FALSE)
lrt = as.numeric(2*(logLik(mmodstar) - logLik(nlmod)))
set.seed(23)
lrt_star = numeric(1000)
for (i in 1:1000) {
rwaste = unlist(simulate(nlmod))
nlmodr = lm(rwaste ~ w, denim)
mmodr = lmer(rwaste ~ 1 + (1|supplier), denim, REML = FALSE)
lrt_star[i] = 2*(logLik(mmodr) - logLik(nlmodr))
}
data(ratdrink)
data(ratdrink, package = faraway)
??ratdrink
data(ratdrink, package = "faraway")
head(ratdrink)
for (i in 1:3){
data = ratdrink %>%
filter(subject == i)
ggplot(aes(x = weeks, y = wt), data = data) +
geom_point()
}
library(dplyr)
for (i in 1:3){
data = ratdrink %>%
filter(subject == i)
ggplot(aes(x = weeks, y = wt), data = data) +
geom_point()
}
library(ggplot2)
for (i in 1:3){
data = ratdrink %>%
filter(subject == i)
ggplot(aes(x = weeks, y = wt), data = data) +
geom_point()
}
for (i in 1:3){
data = ratdrink %>%
filter(subject == i)
plot = ggplot(aes(x = weeks, y = wt), data = data) +
geom_point()
print(plot)
}
for (i in 1:3){
data = ratdrink %>%
filter(subject == i)
plot = ggplot(aes(x = weeks, y = wt), data = data) +
geom_line()
print(plot)
}
for (i in 1:3){
data = ratdrink %>%
filter(subject == i)
plot = ggplot(aes(x = weeks, y = wt), data = data) +
geom_point() +
geom_line()
print(plot)
}
for (i in 1:3){
data = ratdrink %>%
filter(subject == i)
p[i] = ggplot(aes(x = weeks, y = wt), data = data) +
geom_point() +
geom_line()
}
p = []
p = vector()
for (i in 1:3){
data = ratdrink %>%
filter(subject == i)
p[i] = ggplot(aes(x = weeks, y = wt), data = data) +
geom_point() +
geom_line()
}
grid.arrage(p[1], p[2], p[3], nrow = 1)
grid.arrange(p[1], p[2], p[3], nrow = 1)
install.packages("gridExtra")
library(gridExtra)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(faraway)
library(ggplot2)
library(lme4)
library(gridExtra)
p = vector()
for (i in 1:3){
data = ratdrink %>%
filter(subject == i)
p[i] = ggplot(aes(x = weeks, y = wt), data = data) +
geom_point() +
geom_line()
}
grid.arrange(p[1], p[2], p[3], nrow = 1)
p
grid.arrange(p, nrow = 1)
p = c(p1, p2, p3)
p1 = 0
p2 = 0
p3 = 0
p = c(p1, p2, p3)
for (i in 1:3){
data = ratdrink %>%
filter(subject == i)
p[i] = ggplot(aes(x = weeks, y = wt), data = data) +
geom_point() +
geom_line()
}
grid.arrange(p1, p2, p3, nrow = 1)
p1
p[1]
ggplot(aes(x = weeks, y = wt), data = ratdrink) +
geom_point() +
geom_line() +
facet_grid(subject)
ratdrink
ggplot(aes(x = weeks, y = wt), data = ratdrink) +
geom_point() +
geom_line() +
facet_grid(treat)
ggplot(aes(x = weeks, y = wt), data = ratdrink) +
geom_point() +
geom_line() +
facet_grid(treat)
ggplot(aes(x = weeks, y = wt), data = ratdrink) +
geom_point() +
geom_line() +
facet_wrap(~treat)
ggplot(aes(x = weeks, y = wt), data = ratdrink) +
geom_point() +
facet_wrap(~treat)
data("teengamb")
install.packages("sm")
library(sm)
with(teengamb, sm.regression(gamble, income, h = h.select(gamble, income)))
??smooth.spline
plot(teengamb$gamble ~ teengamb$income, col = gray(0.75), cex.lab = 1.5)
lines(smooth.splines(teengamb$income, teengamb$gamble), lty = 2)
plot(teengamb$gamble ~ teengamb$income, col = gray(0.75), cex.lab = 1.5)
lines(smooth.spline(teengamb$income, teengamb$gamble), lty = 2)
teengamb$gamble ~ teengamb$income
lm(teengamb$gamble ~ teengamb$income)
summary(lm(teengamb$gamble ~ teengamb$income))
nrow(teengamb)
lmod = lm(wt ~ weeks | treat, ratdrink)
lmod = lmList(wt ~ weeks | treat, ratdrink)
ml = lmList(wt ~ weeks | treat, ratdrink)
intercepts = sapply(ml, coef)[1, ]
slopes = sapply(ml, coef)[2, ]
ml = lmList(wt ~ weeks | treat, ratdrink)
intercepts = sapply(ml, coef)[1, ]
slopes = sapply(ml, coef)[2, ]
intercepts
slops
ml = lmList(wt ~ weeks | treat, ratdrink)
intercepts = sapply(ml, coef)[1, ]
slopes = sapply(ml, coef)[2, ]
intercepts
slopes
install.packages("pbkrtest")
library(pbkrtest)
mmod = lmer(income ~ ., ratdrink, REML = FALSE)
mmod = lmer(wt ~ ., ratdrink, REML = FALSE)
mmod = lmer(wt ~ ., ratdrink, REML = FALSE)
mmod = lmer(wt ~ ., ratdrink)
mmod = lm(wt ~ ., ratdrink)
mmodr = lm(wt ~ 1, ratdrink)
KRmodcomp(mmod, mmodr)
head(ratdrink)
ml = lmer(wt ~ weeks * treat + (weeks | subject), ratdrink)
summary(ml)
ml_red = lmer(wt ~ weeks + (weeks | subject), ratdrink)
anova(ml_red, ml)
qqnorm(fitted(ml), residuals(ml))
qqnorm(fitted(ml), resid(ml))
fitted_val = fitted(ml)
resid_val = resid(ml)
qqnorm(fitted_val, resid_val)
fitted_val
resid_val
fitted_val = fitted(ml)
resid_val = resid(ml)
qqnorm(fitted_val, resid_val)
resid_val = resid(ml)
qqnorm(resid_val)
qqnorm(resid(ml))
confint(ml)
plot(teengamb$gamble ~ teengamb$income, col = gray(0.75), cex.lab = 1.5)
spline_gamb = smooth.spline(teengamb$income, teengamb$gamble)
lines(spline_gamb, lty = 2)
spline_gamb$df
plot(teengamb$gamble ~ teengamb$income, col = gray(0.75), cex.lab = 1.5)
spline_gamb = smooth.spline(teengamb$income, teengamb$gamble)
lines(spline_gamb, lty = 2)
spline_gamb$df
plot(teengamb$gamble ~ teengamb$income, col = gray(0.75), cex.lab = 1.5)
spline_gamb_df = smooth.spline(teengamb$income, teengamb$gamble, df = 5)
lines(spline_gamb_df, lty = 2)
